name: Auto LineageOS Tree Generator

on:
  workflow_dispatch:
    inputs:
      DUMP_URL:
        description: 'ROM dump Git repository URL'
        required: true
      DUMP_BRANCH:
        description: 'ROM dump branch name'
        required: true
      DEVICE_BRAND:
        description: 'Device brand name (e.g., xiaomi)'
        required: true
      CODENAME:
        description: 'Device codename (e.g., daisy)'
        required: true
      GIT_NAME:
        description: 'Your GitHub username'
        required: true
      GIT_EMAIL:
        description: 'Your GitHub email address'
        required: true

jobs:
  generate-tree:
    name: Generate and Upload Device Tree
    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    permissions:
      contents: write

    env:
      GH_TOKEN: ${{ secrets.LOS }}

    steps:
      - name: Run full generation pipeline
        run: |
          set -euo pipefail
          trap 'echo "::error::Error at line $LINENO: $BASH_COMMAND"' ERR

          echo "========== [1/6] Environment Setup =========="
          sudo apt update && sudo apt install -y git curl python3 python3-pip cpio

          echo "Installing GitHub CLI..."
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
            sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
            https://cli.github.com/packages stable main" | \
            sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update && sudo apt install gh -y

          echo "Installing aospdtgen..."
          pip3 install aospdtgen

          echo "========== [2/6] Cloning ROM Dump =========="
          WORK_DIR="$HOME/LOS-Generator"
          DUMP_DIR="$WORK_DIR/dump"
          OUTPUT_DIR="$WORK_DIR/output"

          mkdir -p "$DUMP_DIR"
          git clone --depth=1 --branch "${{ github.event.inputs.DUMP_BRANCH }}" "${{ github.event.inputs.DUMP_URL }}" "$DUMP_DIR"

          echo "========== [3/6] Generating Device Tree =========="
          cd "$DUMP_DIR"
          python3 -m aospdtgen . --output "$OUTPUT_DIR"

          echo "========== [4/6] Validating Output =========="
          if [ ! -f "$OUTPUT_DIR/device.mk" ] && [ ! -d "$OUTPUT_DIR/${{ github.event.inputs.DEVICE_BRAND }}" ]; then
            echo "::error::Device tree generation failed or output is invalid."
            exit 1
          fi

          echo "========== [5/6] Initializing Git =========="
          cd "$OUTPUT_DIR"
          git config --global init.defaultBranch main
          git init
          git checkout -b "lineage-${{ github.event.inputs.CODENAME }}"
          git config user.name "${{ github.event.inputs.GIT_NAME }}"
          git config user.email "${{ github.event.inputs.GIT_EMAIL }}"

          echo "Creating README.md..."
          cat > README.md <<EOF
# LineageOS Device Tree for ${{ github.event.inputs.CODENAME }}

This device tree was generated using [aospdtgen](https://github.com/sebaubuntu-python/aospdtgen).

- Brand: ${{ github.event.inputs.DEVICE_BRAND }}
- Codename: ${{ github.event.inputs.CODENAME }}
EOF

          git add .
          git commit -s -m "${{ github.event.inputs.CODENAME }}: LineageOS compatible device tree"

          echo "========== [6/6] Creating GitHub Repository and Uploading =========="
          gh repo create "lineage_device_${{ github.event.inputs.DEVICE_BRAND }}_${{ github.event.inputs.CODENAME }}" \
            --public \
            --description="LineageOS device tree for ${{ github.event.inputs.CODENAME }}" \
            --source=. \
            --remote=origin \
            --push

          echo "âœ… Completed: Device tree has been uploaded to GitHub."
