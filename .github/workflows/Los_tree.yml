# Auto LineageOS Tree Generator Workflow - Advanced Version
# Developed by: jisan ff <ffjisan804@gmail.com>
# New GitHub Identity: frnwot <frnbuid2005@gmail.com>

name: losdtgen

on:
  workflow_dispatch:
    inputs:
      DUMP_URL:
        description: 'ROM dump Git repository URL'
        required: true
      DUMP_BRANCH:
        description: 'ROM dump branch name'
        required: true
      DEVICE_BRAND:
        description: 'Device brand name (e.g., xiaomi)'
        required: true
      CODENAME:
        description: 'Device codename (e.g., daisy)'
        required: true
      GIT_NAME:
        description: 'Your GitHub username'
        required: true
      GIT_EMAIL:
        description: 'Your GitHub email address'
        required: true

jobs:
  generate-tree:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      GH_TOKEN: ${{ secrets.LOS }}
      DUMP_URL: ${{ github.event.inputs.DUMP_URL }}
      DUMP_BRANCH: ${{ github.event.inputs.DUMP_BRANCH }}
      DEVICE_BRAND: ${{ github.event.inputs.DEVICE_BRAND }}
      CODENAME: ${{ github.event.inputs.CODENAME }}
      GIT_NAME: ${{ github.event.inputs.GIT_NAME }}
      GIT_EMAIL: ${{ github.event.inputs.GIT_EMAIL }}

    steps:
      - name: Generate and Upload Device Tree
        run: |
          set -euo pipefail
          trap 'echo -e "\033[0;31mError at line $LINENO: $BASH_COMMAND\033[0m"' ERR

          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[0;33m'
          BLUE='\033[0;34m'
          NC='\033[0m' # No Color

          echo -e "${BLUE}=== [1/6] Installing Dependencies...${NC}"
          sudo apt update -qq
          sudo apt install -y git curl python3 python3-pip cpio >/dev/null

          echo -e "${BLUE}Installing GitHub CLI...${NC}"
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
            sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg status=none
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
            sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update -qq
          sudo apt install -y gh >/dev/null

          echo -e "${BLUE}Installing aospdtgen Python package...${NC}"
          pip3 install --quiet aospdtgen

          echo -e "${BLUE}=== [2/6] Cloning ROM Dump...${NC}"
          WORK_DIR="$HOME/LOS-Generator"
          DUMP_DIR="$WORK_DIR/dump"
          OUTPUT_DIR="$WORK_DIR/output"

          mkdir -p "$DUMP_DIR"
          git clone --depth=1 --branch "$DUMP_BRANCH" "$DUMP_URL" "$DUMP_DIR"

          echo -e "${BLUE}=== [3/6] Generating Device Tree...${NC}"
          cd "$DUMP_DIR"
          python3 -m aospdtgen . --output "$OUTPUT_DIR"

          echo -e "${BLUE}=== [4/6] Validating output...${NC}"
          if [ ! -f "$OUTPUT_DIR/device.mk" ] && [ ! -d "$OUTPUT_DIR/$DEVICE_BRAND" ]; then
            echo -e "${RED}Device tree generation failed or output is invalid.${NC}"
            exit 1
          fi

          echo -e "${BLUE}=== [4.5/6] Post-processing files...${NC}"
          cd "$OUTPUT_DIR"

          # Rename lineage_CODENAME.mk â†’ CODENAME.mk if exists
          LINEAGE_FILE="lineage_${CODENAME}.mk"
          TARGET_FILE="${CODENAME}.mk"
          if [ -f "$LINEAGE_FILE" ]; then
            git mv "$LINEAGE_FILE" "$TARGET_FILE"
            echo -e "${YELLOW}Renamed $LINEAGE_FILE to $TARGET_FILE${NC}"
          fi

          # Replace 'PRODUCT_BRAND := Android' with actual device brand in all .mk files
          MK_FILES=$(git grep -l '^PRODUCT_BRAND := Android' -- '*.mk' || true)
          if [ -n "$MK_FILES" ]; then
            for f in $MK_FILES; do
              sed -i "s/^PRODUCT_BRAND := Android/PRODUCT_BRAND := $DEVICE_BRAND/" "$f"
              git add "$f"
              echo -e "${YELLOW}Replaced PRODUCT_BRAND in $f${NC}"
            done
          fi

          # Replace all occurrences of 'generic' with device codename in all files (excluding .git)
          GENERIC_FILES=$(git grep -l 'generic' -- . ':!./.git' || true)
          if [ -n "$GENERIC_FILES" ]; then
            for f in $GENERIC_FILES; do
              sed -i "s/generic/$CODENAME/g" "$f"
              git add "$f"
              echo -e "${YELLOW}Replaced 'generic' with '$CODENAME' in $f${NC}"
            done
          fi

          echo -e "${BLUE}=== [5/6] Initializing Git repository...${NC}"
          git config --global init.defaultBranch main
          git init
          git checkout -b "lineage-$CODENAME"
          git config user.name "$GIT_NAME"
          git config user.email "$GIT_EMAIL"

          echo -e "${BLUE}Creating README.md...${NC}"
          cat > README.md <<EOF
# LineageOS Device Tree for $CODENAME

This device tree was generated using [aospdtgen](https://github.com/sebaubuntu-python/aospdtgen).

- Brand: $DEVICE_BRAND
- Codename: $CODENAME
EOF

          git add README.md
          git commit -s -m "$CODENAME: LineageOS compatible device tree with post-processing changes"

          echo -e "${BLUE}=== [6/6] Creating GitHub repository and pushing...${NC}"
          gh repo create "lineage_device_${DEVICE_BRAND}_${CODENAME}" \
            --public \
            --description="LineageOS device tree for $CODENAME" \
            --source=. \
            --remote=origin \
            --push

          echo -e "${GREEN}Device tree generation and upload complete.${NC}"
